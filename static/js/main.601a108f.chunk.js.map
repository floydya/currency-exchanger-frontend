{"version":3,"sources":["store/types/currencies.ts","modules/Currencies/components/FavoritesList.tsx","modules/Currencies/components/SelectCurrency.tsx","modules/Currencies/components/index.tsx","store/reducers/currencies.ts","store/types/user.ts","store/reducers/user.ts","store/index.ts","store/actions/currencies.ts","store/actions/user.ts","modules/Currencies/containers/index.tsx","modules/Currencies/index.tsx","modules/Converter/components/CurrencyInput.tsx","modules/Converter/components/index.tsx","modules/Converter/index.tsx","modules/Converter/containers/index.tsx","pages/Converter.tsx","pages/Currencies.tsx","App.tsx","index.tsx"],"names":["CurrencyActionNames","ConverterActionsNames","FavoritesList","favorites","onChange","removeFavorite","style","marginTop","size","header","fontWeight","textAlign","bordered","dataSource","renderItem","item","Item","display","alignItems","justifyContent","type","onClick","bind","danger","SelectCurrency","selectedCurrency","currencies","padding","showSearch","width","placeholder","optionFilterProp","value","filterOption","input","option","children","toLowerCase","indexOf","map","currency","Option","name","key","CurrenciesComponent","data","columns","isLoading","sm","loading","initialState","rates","base","date","error","from","JSON","parse","localStorage","getItem","to","currenciesReducer","UserActionNames","state","payload","SET_CURRENCIES","Object","assign","SET_LOADING","SET_ERROR","SET_FROM_VALUE","newFromValue","setItem","stringify","newToRate","parseFloat","toString","SET_TO_VALUE","newToValue","newFromRate","SET_FROM_CURRENCY","newFromCurrency","SET_TO_CURRENCY","newToCurrency","userReducer","SET_CURRENCY","ADD_FAVORITE","REMOVE_FAVORITE","_favorites","filter","rootReducer","combineReducers","user","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","actions","setItems","setError","setLoading","fetchCurrency","dispatch","getState","axios","get","then","response","setFromCurrency","setToCurrency","setFromValue","setToValue","setCurrency","addFavorite","message","success","sortFunc","a","b","aI","includes","Currencies","connect","entries","userActions","React","useMemo","title","dataIndex","render","text","record","StarFilled","StarOutlined","sort","CurrencyInput","setValue","margin","e","target","marginLeft","FirstCurrencyInput","currenciesActions","SecondCurrencyInput","ConverterComponent","flexDirection","height","Converter","keys","ConverterPage","CurrenciesPage","props","useEffect","callable","Header","backgroundColor","exact","className","activeClassName","Content","path","component","console","log","process","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.601a108f.chunk.js","sourcesContent":["export interface IApiResponse {\r\n  rates: {\r\n    [name: string]: number;\r\n  };\r\n  base: string;\r\n  date: string;\r\n}\r\ninterface ICurrencyInputState {\r\n  currency: string;\r\n  value: number;\r\n}\r\n\r\nexport interface ICurrenciesState extends IApiResponse {\r\n  isLoading: boolean;\r\n  error?: any;\r\n  from: ICurrencyInputState;\r\n  to: ICurrencyInputState;\r\n}\r\n\r\nexport enum CurrencyActionNames {\r\n  SET_CURRENCIES = \"CURRENCIES:SET_ITEMS\",\r\n  SET_LOADING = \"CURRENCIES:SET_LOADING\",\r\n  SET_ERROR = \"CURRENCIES:SET_ERROR\",\r\n}\r\n\r\nexport enum ConverterActionsNames {\r\n  SET_FROM_CURRENCY = \"CONVERTER:SET_FROM_CURRENCY\",\r\n  SET_TO_CURRENCY = \"CONVERTER:SET_TO_CURRENCY\",\r\n  SET_FROM_VALUE = \"CONVERTER:SET_FROM_VALUE\",\r\n  SET_TO_VALUE = \"CONVERTER:SET_TO_VALUE\",\r\n}\r\n\r\ninterface ISetItems {\r\n  type: typeof CurrencyActionNames.SET_CURRENCIES;\r\n  payload: IApiResponse;\r\n}\r\n\r\ninterface ISetLoading {\r\n  type: typeof CurrencyActionNames.SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface ISetError {\r\n  type: typeof CurrencyActionNames.SET_ERROR;\r\n  payload: any;\r\n}\r\ninterface ISetCurrency {\r\n  type:\r\n    | typeof ConverterActionsNames.SET_FROM_CURRENCY\r\n    | typeof ConverterActionsNames.SET_TO_CURRENCY;\r\n  payload: string;\r\n}\r\n\r\ninterface ISetValue {\r\n  type:\r\n    | typeof ConverterActionsNames.SET_FROM_VALUE\r\n    | typeof ConverterActionsNames.SET_TO_VALUE;\r\n  payload: number;\r\n}\r\nexport type CurrenciesActions =\r\n  | ISetItems\r\n  | ISetLoading\r\n  | ISetError\r\n  | ISetCurrency\r\n  | ISetValue;\r\n","import React from \"react\";\r\nimport List from \"antd/es/list\";\r\nimport Button from \"antd/es/button\";\r\n\r\ninterface IProps {\r\n  favorites: string[];\r\n  onChange: (currency: string) => void;\r\n  removeFavorite: (currency: string) => void;\r\n}\r\n\r\nconst FavoritesList: React.FC<IProps> = ({\r\n  favorites,\r\n  onChange,\r\n  removeFavorite,\r\n}) => (\r\n  <List\r\n    style={{ marginTop: \"82px\" }}\r\n    size=\"large\"\r\n    header={\r\n      <div style={{ fontWeight: \"bold\", textAlign: \"center\" }}>Favorites</div>\r\n    }\r\n    bordered\r\n    dataSource={favorites}\r\n    renderItem={(item: string) => (\r\n      <List.Item\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Button type=\"link\" onClick={onChange.bind(null, item)}>\r\n          {item}\r\n        </Button>\r\n        <Button danger type=\"link\" onClick={removeFavorite.bind(null, item)}>\r\n          Remove\r\n        </Button>\r\n      </List.Item>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default FavoritesList;\r\n","import React from \"react\";\r\nimport Select from \"antd/es/select\";\r\nimport { ICurrency } from \"../containers\";\r\n\r\ninterface IProps {\r\n  selectedCurrency: string;\r\n  onChange: (currency: string) => void;\r\n  currencies: ICurrency[];\r\n}\r\n\r\nconst SelectCurrency: React.FC<IProps> = ({\r\n  selectedCurrency,\r\n  onChange,\r\n  currencies,\r\n}) => (\r\n  <div\r\n    style={{\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      padding: \"25px\",\r\n    }}\r\n  >\r\n    <Select\r\n      showSearch\r\n      style={{ width: 500 }}\r\n      placeholder=\"Select currency\"\r\n      optionFilterProp=\"children\"\r\n      value={selectedCurrency}\r\n      onChange={onChange}\r\n      filterOption={(input, option) =>\r\n        option\r\n          ? option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          : true\r\n      }\r\n    >\r\n      {currencies.map((currency) => (\r\n        <Select.Option value={currency.name} key={currency.name}>\r\n          {currency.name}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  </div>\r\n);\r\n\r\nexport default SelectCurrency;\r\n","import React from \"react\";\r\nimport Table from \"antd/es/table\";\r\nimport Row from \"antd/es/row\";\r\nimport Col from \"antd/es/col\";\r\nimport FavoritesList from \"./FavoritesList\";\r\nimport { ICurrency } from \"../containers\";\r\nimport SelectCurrency from \"./SelectCurrency\";\r\n\r\ninterface IProps {\r\n  data: ICurrency[];\r\n  columns: {\r\n    title: string;\r\n    key: string;\r\n    dataIndex?: string;\r\n    render?: (text: any, record: any) => React.ReactNode;\r\n  }[];\r\n  onChange: (currency: string) => void;\r\n  removeFavorite: (currency: string) => void;\r\n  selectedCurrency: string;\r\n  isLoading: boolean;\r\n  favorites: string[];\r\n}\r\n\r\nconst CurrenciesComponent: React.FC<IProps> = ({\r\n  data,\r\n  columns,\r\n  onChange,\r\n  selectedCurrency,\r\n  isLoading,\r\n  favorites,\r\n  removeFavorite,\r\n}) => (\r\n  <Row>\r\n    <Col sm={8} style={{ padding: \"0 25px\" }}>\r\n      <FavoritesList\r\n        favorites={favorites}\r\n        removeFavorite={removeFavorite}\r\n        onChange={onChange}\r\n      />\r\n    </Col>\r\n    <Col sm={16}>\r\n      <SelectCurrency\r\n        selectedCurrency={selectedCurrency}\r\n        currencies={data}\r\n        onChange={onChange}\r\n      />\r\n      <Table loading={isLoading} dataSource={data} columns={columns} />\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nexport default CurrenciesComponent;\r\n","import {\r\n  ICurrenciesState,\r\n  CurrenciesActions,\r\n  CurrencyActionNames,\r\n  ConverterActionsNames,\r\n} from \"../types/currencies\";\r\n\r\nconst initialState: ICurrenciesState = {\r\n  rates: {},\r\n  base: \"\",\r\n  date: \"\",\r\n  isLoading: false,\r\n  error: null,\r\n  from: JSON.parse(\r\n    localStorage.getItem(\"converter_from\") || '{\"currency\": null, \"value\": 0}'\r\n  ),\r\n  to: JSON.parse(\r\n    localStorage.getItem(\"converter_to\") || '{\"currency\": null, \"value\": 0}'\r\n  ),\r\n};\r\n\r\nfunction currenciesReducer(\r\n  state = initialState,\r\n  { type, payload }: CurrenciesActions\r\n) {\r\n  switch (type) {\r\n    case CurrencyActionNames.SET_CURRENCIES:\r\n      return Object.assign({}, state, {\r\n        ...payload,\r\n        isLoading: false,\r\n        error: null,\r\n      });\r\n    case CurrencyActionNames.SET_LOADING:\r\n      return Object.assign({}, state, { isLoading: payload });\r\n    case CurrencyActionNames.SET_ERROR:\r\n      return Object.assign({}, state, { isLoading: false, error: payload });\r\n    case ConverterActionsNames.SET_FROM_VALUE:\r\n      if (!payload) payload = 0;\r\n      const newFromValue = Object.assign({}, state.from, { value: payload });\r\n      localStorage.setItem(\"converter_from\", JSON.stringify(newFromValue));\r\n      if (state.to.currency) {\r\n        const newToRate =\r\n          (parseFloat(payload.toString()) / state.rates[state.from.currency]) *\r\n          state.rates[state.to.currency];\r\n        return Object.assign({}, state, {\r\n          from: newFromValue,\r\n          to: { ...state.to, value: newToRate },\r\n        });\r\n      }\r\n      return Object.assign({}, state, { from: newFromValue });\r\n    case ConverterActionsNames.SET_TO_VALUE:\r\n      if (!payload) payload = 0;\r\n      const newToValue = Object.assign({}, state.to, { value: payload });\r\n      localStorage.setItem(\"converter_to\", JSON.stringify(newToValue));\r\n      if (state.from.currency) {\r\n        const newFromRate =\r\n          (parseFloat(payload.toString()) / state.rates[state.to.currency]) *\r\n          state.rates[state.from.currency];\r\n        return Object.assign({}, state, {\r\n          to: newToValue,\r\n          from: { ...state.from, value: newFromRate },\r\n        });\r\n      }\r\n      return Object.assign({}, state, { to: newToValue });\r\n    case ConverterActionsNames.SET_FROM_CURRENCY:\r\n      const newFromCurrency = Object.assign({}, state.from, {\r\n        currency: payload,\r\n      });\r\n      localStorage.setItem(\"converter_from\", JSON.stringify(newFromCurrency));\r\n      return Object.assign({}, state, { from: newFromCurrency });\r\n    case ConverterActionsNames.SET_TO_CURRENCY:\r\n      const newToCurrency = Object.assign({}, state.to, { currency: payload });\r\n      localStorage.setItem(\"converter_to\", JSON.stringify(newToCurrency));\r\n      return Object.assign({}, state, { to: newToCurrency });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default currenciesReducer;\r\n","export interface IUserState {\r\n  selectedCurrency: string;\r\n  favorites: string[];\r\n}\r\n\r\nexport enum UserActionNames {\r\n  SET_CURRENCY=\"USER:SET_CURRENCY\",\r\n  ADD_FAVORITE=\"USER:ADD_FAVORITE\",\r\n  REMOVE_FAVORITE=\"USER:REMOVE_FAVORITE\",\r\n}\r\n\r\ninterface ISetCurrency {\r\n  type: typeof UserActionNames.SET_CURRENCY;\r\n  payload: string;\r\n}\r\n\r\ninterface IAddFavorite {\r\n  type: typeof UserActionNames.ADD_FAVORITE;\r\n  payload: string;\r\n}\r\n\r\ninterface IRemoveFavorite {\r\n  type: typeof UserActionNames.REMOVE_FAVORITE;\r\n  payload: string;\r\n}\r\n\r\nexport type UserActions = ISetCurrency | IAddFavorite | IRemoveFavorite;\r\n","import { IUserState, UserActions, UserActionNames } from \"../types/user\";\r\n\r\nconst initialState: IUserState = {\r\n  selectedCurrency: localStorage.getItem(\"currency\") || \"USD\",\r\n  favorites: JSON.parse(localStorage.getItem(\"favorites\") || \"[]\"),\r\n};\r\n\r\nfunction userReducer(state = initialState, { type, payload }: UserActions) {\r\n  switch (type) {\r\n    case UserActionNames.SET_CURRENCY:\r\n      localStorage.setItem(\"currency\", payload);\r\n      return Object.assign({}, state, { selectedCurrency: payload });\r\n    case UserActionNames.ADD_FAVORITE:\r\n      const favorites = [ ...state.favorites, payload ];\r\n      localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n      return Object.assign({}, state, { favorites });\r\n    case UserActionNames.REMOVE_FAVORITE:\r\n      const _favorites = state.favorites.filter((item) => item !== payload);\r\n      localStorage.setItem(\"favorites\", JSON.stringify(_favorites));\r\n      return Object.assign({}, state, { favorites: _favorites });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import { combineReducers, createStore, applyMiddleware, compose, AnyAction } from \"redux\";\r\nimport thunk, { ThunkDispatch } from \"redux-thunk\";\r\nimport { currenciesReducer, userReducer } from \"./reducers\";\r\nimport { ICurrenciesState } from \"./types/currencies\";\r\nimport { IUserState } from \"./types/user\";\r\n\r\nexport interface IStore {\r\n  currencies: ICurrenciesState;\r\n  user: IUserState;\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  currencies: currenciesReducer,\r\n  user: userReducer,\r\n});\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\nexport const thunkDispatch = (callable: any) => (store.dispatch as ThunkDispatch<IStore, void, AnyAction>)(callable)\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n  CurrencyActionNames,\r\n  ICurrenciesState,\r\n  CurrenciesActions,\r\n  IApiResponse,\r\n  ConverterActionsNames,\r\n} from \"../types/currencies\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport store from \"..\";\r\n\r\ntype ThunkResult<R> = ThunkAction<\r\n  R,\r\n  ICurrenciesState,\r\n  undefined,\r\n  CurrenciesActions\r\n>;\r\n\r\nconst actions = {\r\n  setItems: (payload: IApiResponse): CurrenciesActions => ({\r\n    type: CurrencyActionNames.SET_CURRENCIES,\r\n    payload,\r\n  }),\r\n  setError: (payload: any): CurrenciesActions => ({\r\n    type: CurrencyActionNames.SET_ERROR,\r\n    payload,\r\n  }),\r\n  setLoading: (payload: boolean): CurrenciesActions => ({\r\n    type: CurrencyActionNames.SET_LOADING,\r\n    payload,\r\n  }),\r\n  fetchCurrency: (): ThunkResult<void> => (dispatch) => {\r\n    dispatch(actions.setLoading(true));\r\n    const currency = store.getState().user.selectedCurrency;\r\n    axios.get(`https://api.exchangeratesapi.io/latest?base=${currency}`).then(\r\n      (response) => dispatch(actions.setItems(response.data)),\r\n      (error) => dispatch(actions.setError(error))\r\n    );\r\n  },\r\n  setFromCurrency: (currency: string): CurrenciesActions => ({\r\n    type: ConverterActionsNames.SET_FROM_CURRENCY,\r\n    payload: currency,\r\n  }),\r\n  setToCurrency: (currency: string): CurrenciesActions => ({\r\n    type: ConverterActionsNames.SET_TO_CURRENCY,\r\n    payload: currency,\r\n  }),\r\n  setFromValue: (value: number): CurrenciesActions => ({\r\n    type: ConverterActionsNames.SET_FROM_VALUE,\r\n    payload: value,\r\n  }),\r\n  setToValue: (value: number): CurrenciesActions => ({\r\n    type: ConverterActionsNames.SET_TO_VALUE,\r\n    payload: value,\r\n  }),\r\n};\r\n\r\nexport default actions;\r\n","import { UserActionNames, UserActions } from \"../types/user\";\r\nimport message from \"antd/es/message\";\r\n\r\nconst actions = {\r\n  setCurrency: (payload: string): UserActions => ({\r\n    type: UserActionNames.SET_CURRENCY,\r\n    payload,\r\n  }),\r\n  addFavorite: (payload: string): UserActions => {\r\n    message.success(\"Added to favorites\");\r\n    return {\r\n      type: UserActionNames.ADD_FAVORITE,\r\n      payload,\r\n    };\r\n  },\r\n  removeFavorite: (payload: string): UserActions => {\r\n    message.success(\"Removed from favorites\");\r\n    return {\r\n      type: UserActionNames.REMOVE_FAVORITE,\r\n      payload,\r\n    };\r\n  },\r\n};\r\n\r\nexport default actions;\r\n","import React from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { IStore } from \"../../../store\";\r\nimport CurrenciesComponent from \"../components\";\r\nimport { userActions } from \"../../../store/actions\";\r\nimport { UserActions } from \"../../../store/types/user\";\r\nimport { StarOutlined, StarFilled } from \"@ant-design/icons\";\r\n\r\nexport interface ICurrency {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface IProps {\r\n  setCurrency: (currency: string) => void;\r\n  addFavorite: (currency: string) => void;\r\n  removeFavorite: (currency: string) => void;\r\n  selectedCurrency: string;\r\n  currencies: ICurrency[];\r\n  favorites: string[];\r\n  isLoading: boolean;\r\n}\r\n\r\nconst sortFunc = (favorites: string[]) => (a: ICurrency, b: ICurrency) => {\r\n  const aI = favorites.includes(a.name) ? 1 : 0;\r\n  const bI = favorites.includes(b.name) ? 1 : 0;\r\n  return bI - aI;\r\n};\r\n\r\nexport const Currencies: React.FC<IProps> = ({\r\n  setCurrency,\r\n  selectedCurrency,\r\n  currencies,\r\n  addFavorite,\r\n  removeFavorite,\r\n  favorites,\r\n  isLoading\r\n}) => {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        title: \"Currency\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        title: \"Value\",\r\n        dataIndex: \"value\",\r\n        key: \"value\",\r\n      },\r\n      {\r\n        title: \"\",\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        render: (text: any, record: ICurrency) =>\r\n          favorites.includes(record.name) ? (\r\n            <StarFilled onClick={removeFavorite.bind(null, record.name)}/>\r\n          ) : (\r\n            <StarOutlined onClick={addFavorite.bind(null, record.name)} />\r\n          ),\r\n      },\r\n    ],\r\n    [favorites, addFavorite, removeFavorite]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <CurrenciesComponent\r\n        isLoading={isLoading}\r\n        data={currencies.sort(sortFunc(favorites))}\r\n        columns={columns}\r\n        onChange={setCurrency}\r\n        selectedCurrency={selectedCurrency}\r\n        favorites={favorites}\r\n        removeFavorite={removeFavorite}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  selectedCurrency: state.user.selectedCurrency,\r\n  currencies: Object.entries(state.currencies.rates).map(([name, value]) => ({\r\n    name,\r\n    value,\r\n  })),\r\n  isLoading: state.currencies.isLoading,\r\n  favorites: state.user.favorites,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => ({\r\n  setCurrency: (currency: string) =>\r\n    dispatch(userActions.setCurrency(currency)),\r\n  addFavorite: (currency: string) =>\r\n    dispatch(userActions.addFavorite(currency)),\r\n  removeFavorite: (currency: string) =>\r\n    dispatch(userActions.removeFavorite(currency)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Currencies);\r\n","import { default as Currencies } from \"./containers\";\r\nexport default Currencies;\r\n","import React from \"react\";\r\nimport Input from \"antd/es/input\";\r\nimport Select from \"antd/es/select\";\r\n\r\ninterface IProps {\r\n  currencies: string[];\r\n  currency: string;\r\n  value: number;\r\n  setCurrency: (a: string) => void;\r\n  setValue: (value: number) => void;\r\n}\r\n\r\nconst CurrencyInput: React.FC<IProps> = ({ currencies, currency, value, setValue, setCurrency }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", margin: \"5px 0\" }}>\r\n      <Input type=\"number\" onChange={(e)=> setValue(parseFloat(e.target.value))} value={value} placeholder=\"Сумма...\" width={450}/>\r\n      <Select placeholder=\"Валюта\" style={{ width: 150, marginLeft: \"10px\" }} value={currency} onChange={setCurrency}>\r\n        {currencies.map((currency) => (\r\n          <Select.Option value={currency} children={currency} />\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyInput;\r\n","import React from \"react\";\r\nimport CurrencyInput from \"./CurrencyInput\";\r\nimport { IStore } from \"../../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { currenciesActions } from \"../../../store/actions\";\r\nimport { CurrenciesActions } from \"../../../store/types/currencies\";\r\n\r\ninterface IProps {\r\n  currencies: string[];\r\n}\r\n\r\nconst FirstCurrencyInput = connect((state: IStore) => ({\r\n  currency: state.currencies.from.currency,\r\n  value: state.currencies.from.value,\r\n}), (dispatch: Dispatch<CurrenciesActions>) => ({\r\n  setValue: (value: number) => dispatch(currenciesActions.setFromValue(value)),\r\n  setCurrency: (currency: string) => dispatch(currenciesActions.setFromCurrency(currency)),\r\n}))(CurrencyInput);\r\n\r\nconst SecondCurrencyInput = connect((state: IStore) => ({\r\n  currency: state.currencies.to.currency,\r\n  value: state.currencies.to.value,\r\n}), (dispatch: Dispatch<CurrenciesActions>) => ({\r\n  setValue: (value: number) => dispatch(currenciesActions.setToValue(value)),\r\n  setCurrency: (currency: string) => dispatch(currenciesActions.setToCurrency(currency)),\r\n}))(CurrencyInput);\r\n\r\nconst ConverterComponent: React.FC<IProps> = ({ currencies }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <FirstCurrencyInput currencies={currencies} />\r\n      <SecondCurrencyInput currencies={currencies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConverterComponent;\r\n","import { default as Converter } from \"./containers\";\r\nexport default Converter;\r\n","import React from \"react\";\r\nimport ConverterComponent from \"../components\";\r\nimport { IStore } from \"../../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface IProps {\r\n  currencies: string[];\r\n}\r\n\r\nconst Converter: React.FC<IProps> = ({ currencies }) => {\r\n  return <ConverterComponent currencies={currencies} />;\r\n};\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  currencies: Object.keys(state.currencies.rates),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Converter);\r\n","import React from \"react\";\r\nimport { Converter } from \"../modules\";\r\n\r\nexport default function ConverterPage() {\r\n  return <Converter />;\r\n}\r\n","import React from 'react'\r\nimport { Currencies } from '../modules'\r\n\r\nexport default function CurrenciesPage() {\r\n  return (\r\n    <div>\r\n      <Currencies />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\";\nimport Layout from \"antd/es/layout\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport { Currencies, Converter } from \"./pages\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { IStore, thunkDispatch } from \"./store\";\nimport { currenciesActions } from \"./store/actions\";\n\ntype IProps = {\n  selectedCurrency: string;\n}\n\nconst App: React.FC<IProps> = (props) => {\n  \n  useEffect(() => {\n    thunkDispatch(currenciesActions.fetchCurrency());\n  }, [props.selectedCurrency])\n\n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Layout.Header\n        style={{\n          backgroundColor: \"#fff\",\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          padding: \"15px\",\n        }}\n      >\n        <span />\n        <NavLink\n          exact\n          to=\"/currencies\"\n          className=\"ant-btn\"\n          activeClassName=\"ant-btn-dangerous\"\n        >\n          Currencies\n        </NavLink>\n        <NavLink\n          exact\n          to=\"/converter\"\n          className=\"ant-btn\"\n          activeClassName=\"ant-btn-dangerous\"\n        >\n          Converter\n        </NavLink>\n        <span />\n      </Layout.Header>\n      <Layout.Content style={{ padding: \"35px\" }}>\n        <Switch>\n          <Route exact path=\"/currencies\" component={Currencies} />\n          <Route exact path=\"/converter\" component={Converter} />\n          <Redirect exact from=\"/\" to=\"/currencies\" />\n          <Route path=\"*\" render={() => <div>Not found!</div>} />\n        </Switch>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default connect((state: IStore) => ({selectedCurrency: state.user.selectedCurrency}))(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconsole.log(process.env.PUBLIC_URL);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}